//Game system and display..it prevents errors when receiving x,y / prints the board / determine victory
package work;

import java.util.Scanner;

public class OmokGameSystem {

	public static int victory = 0;

	public static void scan(int a[][], int x, int y, int code, int i) {
		Scanner scanner = new Scanner(System.in);
		x = scanner.nextInt() - 1;
		Scanner scanner2 = new Scanner(System.in);
		y = scanner.nextInt() - 1;
		if (y >= 18 || x >= 18) {
			OmokGameSystem.error(a, x, y, code, i);
		} else if (a[x][y] == 1 || a[x][y] == 2) {
			OmokGameSystem.error(a, x, y, code, i);
		} else {
			a[x][y] = code;
		}
	}

	public static void error(int a[][], int x, int y, int code, int i) {
		System.out.println("Wrong Code!");
		System.out.printf("Player " + (i % 2 + 1) + " please insert x and y again");
		System.out.println();
		OmokGameSystem.scan(a, x, y, code, i);
	}

	public static void printBase(int a[][]) {
		for (int y = 0; y < a.length; y++) {
			for (int x = 0; x < a.length; x++) {
				if (a[x][y] == 1) {
					System.out.print("[o]");
				} else if (a[x][y] == 2) {
					System.out.print("[x]");
				} else
					System.out.print("[ ]");
			}
			System.out.println();
		}

	}

	public static void victory(int a[][], int i, int length) {
		int determine = 0;
		for (int y = 0; y < a.length; y++) {
			for (int x = 0; x < a.length; x++) {
				for (int b = 1; b <= length - 1; b++) {
					if (x <= a.length - length && a[x][y] != 0 && a[x][y] == a[x + b][y]) {
						determine = determine + 1;
					} else if (y <= a.length - length && a[x][y] != 0 && a[x][y] == a[x][y + b]) {
						determine = determine + 1;
					} else if (x <= a.length - length && y <= a.length - length && a[x][y] != 0
							&& a[x][y] == a[x + b][y + b]) {
						determine = determine + 1;
					} else if (x <= a.length - length && y >= length - 1 && a[x][y] != 0
							&& a[x][y] == a[x + b][y - b]) {
						determine = determine + 1;
					} else {
						determine = 0;
					}
				}
				if (determine == length - 1) {
					System.out.println("Game over!");
					System.out.printf("Player " + (i % 2 + 1) + " wins!");
					victory = 1;
					break;
				}
			}
		}
	}

	public static void OnePlayer(int[][] board, int x, int y, int length) {
		for (int i = 0; i >= 0; i++) {
			OmokGameSystem.printBase(board);
			if (i % 2 == 0) {
				System.out.println();
				System.out.println("Player 1, please insert x and y");
				OmokGameSystem.scan(board, x, y, 1, i);
				System.out.println();
			}
			if (i % 2 == 1) {
				System.out.println();
				System.out.println("Computer's Turn");
				OmokGameSystem.AI(board, length);
				System.out.println();
			}
			OmokGameSystem.victory(board, i, length);
			if (victory == 1) {
				System.out.println();
				OmokGameSystem.printBase(board);
				break;
			}
		}
	}

	public static void TwoPlayer(int[][] board, int x, int y, int length) {
		for (int i = 0; i >= 0; i++) {
			OmokGameSystem.printBase(board);
			if (i % 2 == 0) {
				System.out.println();
				System.out.println("Player 1, please insert x and y");
				OmokGameSystem.scan(board, x, y, 1, i);
				System.out.println();
			}
			if (i % 2 == 1) {
				System.out.println();
				System.out.println("Player 2, please insert x and y");
				OmokGameSystem.scan(board, x, y, 2, i);
				System.out.println();
			}
			OmokGameSystem.victory(board, i, length);
			if (victory == 1) {
				System.out.println();
				OmokGameSystem.printBase(board);
				break;
			}
		}
	}

	public static void AI(int a[][], int length) {
		int locationx;
		int locationy;

		for (int i = 0;; i++) {
			locationx = OmokGameSystem.randomRange(0, a.length - 1);
			locationy = OmokGameSystem.randomRange(0, a.length - 1);
			if (a[locationx][locationy] != 1) {
				a[locationx][locationy] = 2;
				break;
			}
		}
	}

	public static int randomRange(int n1, int n2) {
		return (int) (Math.random() * (n2 - n1 + 1)) + n1;
	}
}
